apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: meeting-minutes-sql
  namespace: meeting-minutes
  labels:
    app: meeting-minutes
    tier: database
    environment: production
spec:
  replicas: 3
  serviceName: meeting-minutes-sql
  selector:
    matchLabels:
      app: meeting-minutes
      tier: database
  template:
    metadata:
      labels:
        app: meeting-minutes
        tier: database
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - meeting-minutes
            topologyKey: topology.kubernetes.io/zone
      topologySpreadConstraints:
      - maxSkew: 1
        topologyKey: topology.kubernetes.io/zone
        whenUnsatisfiable: DoNotSchedule
        labelSelector:
          matchLabels:
            app: meeting-minutes
      containers:
      - name: sql
        image: mcr.microsoft.com/azure-sql-edge:latest
        ports:
        - containerPort: 1433
          name: sql
        env:
        - name: ACCEPT_EULA
          value: "Y"
        - name: MSSQL_SA_PASSWORD
          valueFrom:
            secretKeyRef:
              name: sql-credentials
              key: sa-password
        resources:
          requests:
            memory: "8Gi"
            cpu: "4"
          limits:
            memory: "16Gi"
            cpu: "8"
        volumeMounts:
        - name: sql-data
          mountPath: /var/opt/mssql
        startupProbe:
          exec:
            command:
            - /opt/mssql-tools/bin/sqlcmd
            - -S
            - localhost
            - -U
            - sa
            - -P
            - $(MSSQL_SA_PASSWORD)
            - -Q
            - SELECT 1
          initialDelaySeconds: 60
          periodSeconds: 10
          failureThreshold: 30
        livenessProbe:
          exec:
            command:
            - /opt/mssql-tools/bin/sqlcmd
            - -S
            - localhost
            - -U
            - sa
            - -P
            - $(MSSQL_SA_PASSWORD)
            - -Q
            - SELECT DATABASEPROPERTYEX('master', 'Status')
          initialDelaySeconds: 60
          periodSeconds: 15
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          exec:
            command:
            - /opt/mssql-tools/bin/sqlcmd
            - -S
            - localhost
            - -U
            - sa
            - -P
            - $(MSSQL_SA_PASSWORD)
            - -Q
            - SELECT state_desc FROM sys.databases WHERE name = 'master'
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 3
          failureThreshold: 3
      volumes:
      - name: sql-data
        persistentVolumeClaim:
          claimName: sql-data
  volumeClaimTemplates:
  - metadata:
      name: sql-data
    spec:
      accessModes:
      - ReadWriteOnce
      storageClassName: managed-premium
      resources:
        requests:
          storage: 500Gi
      allowVolumeExpansion: true